syntax on

"leader key
let mapleader = " "

"very good command and useful with the d command"
set relativenumber
set number
set cursorline
"backup settings
set backupdir=/tmp
set directory=~/.vim/tmp,.
set backup

"tab settings
set tabstop=4 "tabs expand to 4 spaces
set shiftwidth=4
set softtabstop=4
set expandtab

"stop auto commenting, this is hurtful more then it is useful
set formatoptions-=cro


"split settings so they are not stupid like defaults
set splitbelow splitright

"persistent undo between opening and closing
set undofile

autocmd Filetype python set cursorcolumn

"smart search
set ignorecase
set smartcase

"smart wrapping
set wrap
set textwidth=79
set formatoptions=qrn1

"search as characters are entered
set incsearch

"keybindings
"<CR> is a carrige return(?)
"remove highlighting (no highlight is the idea I am going for here)
nnoremap <leader>nh :noh<CR>
"open terminal
nnoremap <leader>t :term<CR>
" run bash script for current cpp file
nnoremap <leader>r :!sh ~/runCPP.sh % output<CR>
" turn spelling off or on
" correct
nnoremap <leader>s :setlocal spell!<CR>
"space j and k to move tabs
nnoremap <leader>j :tabprevious<CR>
nnoremap <leader>k :tabnext<CR>
" These two clipboard functions only yank and put to primary X11 clipboard
" yank too system clipboard
nnoremap <leader>y "*y
"Put from system clipboard
nnoremap <leader>p "*p



call plug#begin('~/.vim/plugged')
Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }

Plug 'chikamichi/mediawiki.vim'

Plug 'arzg/vim-colors-xcode'

Plug 'https://github.com/nathanaelkane/vim-indent-guides'

Plug 'https://github.com/machakann/vim-highlightedyank'

Plug 'https://github.com/junegunn/goyo.vim'

Plug 'scrooloose/nerdtree'

Plug 'https://github.com/hashivim/vim-terraform.git'

Plug 'dracula/vim', { 'as': 'dracula' }
call plug#end()

colorscheme dracula
set background=dark

"spelling 
setlocal spell spelllang=en_us
setlocal spell!

" double press i to leave
map! ii <Esc>

" auto-close braces simple
inoremap " ""<left>
inoremap ' ''<left>
"inoremap ( ()<left>
inoremap [ []<left>
inoremap { {<return><tab><return>}<left>



"vim file browser remove banner
let g:netrw_banner = 0

" Security options
set nomodeline

" Don't mark word_word as a markdown error
hi link markdownError Normal


"pymode

" This stops that stupid error window popping up everywhere on every buffer
let g:pymode_lint_cwindow = 0
